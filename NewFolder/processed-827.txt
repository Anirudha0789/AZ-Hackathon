  there are n teams who are solving a problem of insomnia  qualifier  every team has submitted a solution and got ac  there are two things associated with each team score s which they have got for successfully solving the problem and a bonus m which is a score multiplier  you are given s and m for each team i  the net score of ith team is si  mi for  ≤ i ≤ n   you have been asked q queries  in each query you are given a number k and you have to tell which team is on the kth position in the rank list   the rank list holds the net score and the team number i  based index and is sorted in non increasing order  if the score of any two teams is the same then the team having lesser i value is kept above in the rank list   input  first line of the input contains an integer n denoting number of teams  then follow n lines each line contains two integers s denoting the score of team i and m denoting the multiplier value of team i separated by a space  next line contains an integer q denoting number of queries  then follow q lines each line contains a single integer k which denotes the queried rank number   output  for each query output a single integer containing the team number which is on kth rank   constraints   ≤ n ≤   ≤ s ≤   ≤ m ≤   ≤ q ≤   ≤ k ≤ n i has  based indexing  example input                    output       input                output     explanation example case  the score of  teams are                and     respectively  so the rank list will look like scorexaxaxateam xaxaxaxaxaxaxaxaxaxa xaxaxaxaxaxaxaxaxaxa xaxaxaxaxaxaxaxaxaxa xaxaxaxaxaxaxaxaxaxa xaxaxaxaxaxaxaxaxaxaxaxa although two teams having number  and  have the same net score but team having number  is put above than team having number  in the rank list as per the sorting policy  example case   as the score of all the teams are same i e   so the rank list will contain the team number in order          author ★amanmittal editorial  codechef comproblemsinsqe tags                                   amanmittal cakewalk insq sorting                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages java c cpp pyp  submit