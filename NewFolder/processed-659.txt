 mudit aakash and vaibhav are good friends  once they went for a jungle adventure  there the trio came to know about a mysterious apple tree  the trio thought of eating apples from the tree  the tree was rooted at node  and consisted of total nn nodes including node   every node has an apple and a value associated with the node  the nodes are connected by edges having some weight ww  the trio can move from any node vv to node uu and eat the apple at node uu only if node uu is not node vv and node uu is in the subtree of node vv and the path weight from node vv to node uu is less than or equals to the value associated at the destination node i e value at node uu  thus for each node v the trio wants to know the number of vertices they can reach from node v and can eat the apples  please help them  input  the first line contains an integer nn denoting the number of nodes in the tree  the second line contains an array aa of nn integers denoting the value associated at each node  the next n−n− lines contains three integers uuvv and ww denoting an edge between vertices uu and vv having weight ww   output print an array of nn integers denoting the number of nodes visited from the ith node  constraints  ≤ai≤≤ai≤ ≤w≤≤w≤ ≤n≤≤n≤  sample input                    sample output       explanation node  can move to node  and node  can move to node    author ★vasu editorial  codechef comproblemsence tags                                   binarysearch dynamicprogramming enco vasu                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit