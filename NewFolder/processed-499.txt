 read problem statements in russian mandarin chinese bengali and vietnamese as well  there are nn people numbered from  to nn  they go to a cinema hall  each of them buys a ticket which has a number written on it  the number on the ticket of the ithith person is aiai   there are infinite seats in the cinema hall  the seats are numbered sequentially starting from   all the nn people stand in a queue to get their respective seats  person  stands at the front of the queue person  stands in the second position of the queue so on up to person nn who stands at the rear of the queue  they were given seats in this manner let the number on the ticket of the person currently standing in front of the queue be xx  if the xthxth seat is empty the person gets out of the queue and takes the xthxth seat  otherwise the person goes to the rear of the queue and the number on his ticket is incremented by one  that is it becomes xx  print the seat number occupied by each of the nn people  input format  the first line of input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn  the second line of each testcase line contains nn spaceseparated integers aa…anaa…an   output format for each test case print a single line containing nn spaceseparated integers where the ithith integer denotes the seat number finally occupied by the person ii  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤ai≤n≤ai≤n the sum of nn over all test cases does not exceed ⋅⋅                          sample input                                                                           sample output                                              explanation test case    first the first second third and fifth person get the seats numbered    and  respectively because when they come to the front of the queue the corresponding seats are empty  the fourth person does not get the seat numbered  because when he comes to the front of the queue the seat is already occupied by the second person  hence he goes to the rear of the queue and the number on the ticket of the fourth person is incremented by one and becomes   the fourth person does not get the seat numbered  because it is already occupied by the third person  hence the number on the ticket of the fourth person is incremented by one and becomes   again the fourth person does not get the seat numbered  because it is occupied by the fifth person  hence the number on the ticket of the fourth person is incremented by one and becomes   finally the fourth person gets the seat numbered    test case    the first person gets the seat numbered   the second and third people do not get the seat numbered  because when they come to the front of the queue the seat is already occupied by the first person  hence the number on the tickets of both is incremented by one and becomes   then the second person gets the seat numbered   the third person does not get the seat numbered  because when he comes to the front of the queue it is already occupied by the second person  hence the number on the ticket of the third person is increased to   finally the third person gets the seat numbered     author ★soumyadeep editorial  codechef comproblemsticketqu tags                                   queues deque binary search                                                              data structures algorithms searching                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit