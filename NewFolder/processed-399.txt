 in olden days when primary memory was not as available as it is now files were stored in external storage devices like tapes and then two files or their parts were loaded in memory for merging  in merging two sorted files in the worst case number of comparisons required equals sum of lengths of the two files  assume in kway merging the number of comparisons equals sum of lengths of files to be merged  given length of a set of files you are required to find order in which these files will have to be merged in minimum number of comparisons  input the first line of input is an integer t denoting the number of test cases   from the next line test cases follow  for each case the first line contains two integers n and k representing respectively number of files to be merged and maximum number of files that can be merged at the same time  next line contains n positive integers representing the length of each file xa output for each test case you must print a single line with the test case number and the minimum number of comparisons incurred to merge the files  please refer to the sample input and output for exact formatting  constraints   t     n     k  n the maximum length of a file can be   example input                             output case   case    problem setter  dr  m  kaykobad   author jingboadm tags                                   greedy jingboadm kanacm mediumhard                                                                                        difficulty rating                       na date added  time limit   secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit