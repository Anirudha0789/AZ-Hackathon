 all chefs in the wolf town are scored by the government and receive the score at the beginning of every year  now dark chef tries to deface his score  the score is shown with the following segment display  dark chef can turn on some segments but he can not turn off any segment  thus he can increase his score like as follows  please note that dark chef can add new segment digits to the beginning or the end of his score  but he is not allowed to end up with the score having leading zeros except when the score is zero itself see example case   now he has received the score s and he wants to increase his score as much as possible  but the maximum possible score government could give is m  so his score must not exceed m  your task is to calculate the maximum possible score he could get after defacing  note  the digit  can not be changed to the digit  because in the representation of the digit  we have right  segments turned on while for the digit  the upperright segment must be turned off see example case  for clarity  and of course the defaced score must be represented by the digits which have exactly the same form as shown in the above figure  input the first line of the input contains an integer t denoting the number of test cases  the description of t test cases follows  the only line of each test case contains two space separated integers s and m dark chefs score and the maximum score the government could give respectively  output for each test case output a single line containing the maximum possible score dark chef could get after defacing  constraints  ≤ t ≤  ≤ s ≤ m ≤ each positive integer in the input will be given without leading zerosif s or m is equal to zero it will be given in the input as  quotes for clarity example input                           output              explanation the first three example cases correspond to the figure in the problem statement   author hirotoadm tester ★antonlunyov editorial  codechef comproblemsdefacing tags                                   greedy brute force                                                              algorithms                                                                                        difficulty rating                        date added  time limit   secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit