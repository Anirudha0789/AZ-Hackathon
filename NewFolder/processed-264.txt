 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  chefina is playing with ranges  there are nn ranges lrlr…lnrnlrlr…lnrn  chefina wants to divide the ranges into two nonempty subsets in such a way that each range is in exactly one subset and whenever two ranges have a common point they are in the same subset  since this could be difficult to achieve chefina can delete any number of ranges possibly zero and then divide the remaining ranges into such nonempty subsets  she wants to know whether it is possible to achieve her task after deleting some ranges and if it is possible she also wants to know the minimum number of ranges she needs to delete to achieve it  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn    nn lines follow  for each ii ≤i≤n≤i≤n the iith of these lines contains two spaceseparated integers lili and riri   output for each test case print a single line containing one integer ― the minimum number of ranges to delete or −− if it is impossible to delete some ranges and divide the remaining ranges into two nonempty subsets  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤li≤ri≤≤li≤ri≤ for each valid ii  subtasks subtask   points nn subtask   points nn subtask   points ri≤ri≤ for each valid ii subtask   points original constraints                          sample input                                                                       sample output                               explanation example case  it is enough to delete the range   example case  there is no way to divide these two ranges into two suitable nonempty subsets and deleting any range obviously makes it impossible too  example case  there is no need to delete any ranges we can just put one range into one subset and the other range into the other subset   author ★rishupnitdgp editorial  codechef comproblemschfran tags                                   sets maps hashmaps greedy                                                              data structures algorithms                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit