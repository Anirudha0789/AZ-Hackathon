                        the match is set and your team is ready to win  the team has nn players each with the ability aiai   but you are not happy with the given playing order  you are wondering how to create a new order so that the player with lesser ability go earlier i e  in nondecreasing order   in one move you can break a suffix of any length of the array and attach it to the front  you can do the move as many times as you like   for example the array aa can become aa in one move by breaking and reattaching the suffix of length    for each testcase if the array can be sorted nondecreasingly print yes and the minimum number of moves to do so  otherwise print no   input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  each testcase contains two lines  the first line has a single integer nn denoting the number of players in the team  the second list has nn spaceseparated integers of the array aa where aiai represents the ability of the ithith player  output  print a single line containing the string yes if the string can be sorted or no if it does not without quotes  if answer is yes print a second line containing a single integer the minimum number of moves   you may print each character of each string in uppercase or lowercase for example the strings yes yes yes and yes will all be treated as identical  constraints  ≤tn≤⋅≤tn≤⋅  ≤ai≤≤ai≤  the sum of all nn over all testcases tt does not exceed ⋅⋅                          sample input                                                             sample output                            yes  no explanation example case  the array is already sorted nondecreasingly  hence  moves required example case  we cannot satisfy the condition for the given array  hence answer is no                                                   author ★shikhars editorial  codechef comproblemsicm tags                                   observation                                                              algorithms                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit