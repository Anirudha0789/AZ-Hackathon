 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  there are bb blocks numbered  through bb distributed in nn containers numbered  through nn  for each valid ii the weight of the iith block is wiwi kilograms  for each container ii you should decide if it will be used like a stack or a queue  at any time a container may contain any sequence of blocks possibly the empty sequence lets denote the number of the jjth block indexed from  in the iith container by aijaij  a stack is a data structure that stores a sequence of integers xx…xmxx…xm and supports two types of instructions  pop remove the last element of the sequence  after this instruction the sequence becomes x…xm−x…xm− it must be nonempty before this instruction  the return value of this instruction is xmxm  push a add an element aa at the end of the sequence  after this instruction the sequence becomes x…xmax…xma   similarly a queue is a data structure that stores a sequence of integers xx…xmxx…xm and supports two types of instructions  pop remove the first element of the sequence  after this instruction the sequence becomes x…xmx…xm it must be nonempty before this instruction  the return value of this instruction is xx  push a add an element aa at the end of the sequence  after this instruction the sequence becomes x…xmax…xma   for each valid ii it takes ci⋅wci⋅w nanoseconds to pop a block with weight ww from the container ii and di⋅wdi⋅w nanoseconds to push a block with weight ww to the container ii  using the given data structures you may perform the following operation at most bb times choose two containers cc and cc c≠cc≠c pop a block from the ccth container and then push this block to the ccth container  your task is to sort all the blocks in a single container i e  after performing all operations the sequence of blocks in some container must be …b…b  the time spent performing operations should be as small as possible  input  the first line of the input contains two spaceseparated integers nn and bb  the second line contains nn spaceseparated integers cc…cncc…cn  the third line contains nn spaceseparated integers dd…dndd…dn  the fourth line contains bb spaceseparated integers ww…wbww…wb  the next nn lines describe the initial distribution of blocks in containers  for each valid ii the iith of these lines contains an integer mm denoting the number of blocks which are initially in the iith container followed by a space and mm spaceseparated integers aiai…aimaiai…aim denoting the sequence of blocks which are initially in this container   output  first print a line containing a string with length nn  for each valid ii the iith character of this string should be either s if the iith sequence is used as a stack or q if it is used as a queue  then print a line containing a single integer qq ― the number of operations to perform  finally print qq lines  each of these lines should contain two spaceseparated integers cc and cc describing an operation that pops an element from the ccth container and pushes it into the ccth container   constraints  ≤n≤≤n≤ bb ≤cidi≤≤cidi≤ for each valid ii ≤wi≤≤wi≤ for each valid ii ≤m≤b≤m≤b ≤aij≤b≤aij≤b for each valid ijij  example input                     example output qqs           explanation the first two containers are used as queues and the third container as a stack  the sequences change as follows  initially   after the first operation   after the second operation   after the third operation   after the fourth operation    test generation the source code used to generate test data can be downloaded here   nn can be    or   all values of cici didi and wiwi are chosen uniformly randomly and independently between  and  inclusive  a permutation of the integers  through bb is chosen uniformly randomly  the blocks are pushed to the containers one by one in this order  one of the following two initial distribution schemes is chosen all bb blocks are pushed into the st container  for each block a container into which it is pushed is chosen uniformly randomly and independently  there are eight test files ― one for each possible value of nn and distribution scheme   scoring if your output is invalid in particular if you attempt to pop an empty container you do not sort the blocks in a single container or you use more than bb operations you will receive the wrong answer verdict  otherwise the score of a test file is the number of nanoseconds spent performing your operations  the score of a submission is the sum of scores of all test files  your goal is to minimise the score of your submission  there are eight test files  during the contest the displayed score will account for exactly four test files i e  your score reflects your submissions performance on   of the test files however if your program gets a nonac verdict on any test file your submissions verdict will be nonac  in other words an ac verdict denotes that your program runs successfully on all the test files  after the end of the contest your score will be changed to include the sum of your programs scores over the other  test files   author ★alei editorial  codechef comproblemssqsort tags                                   alei heuristic jan sorting tiebreaker                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit