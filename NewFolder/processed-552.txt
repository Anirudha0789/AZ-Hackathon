 read problems statements in mandarin chinese russian vietnamese and bengali as well  the city of hunterland can be represented as a grid with nn rows numbered  through nn and mm columns numbered  through mm  lets denote a cell in row rr and column cc by rcrc  ahmet the mayor plans to develop the underground water system of hunterland  there is a large reservoir of water in the cell   water from the reservoir must reach the cell nmnm through a simple path in a network of underground pipes  from each cell ijij water flows out through a onedirectional pipe with a given capacity aijaij and direction dijdij up down left or right either to a sideadjacent cell or out of the grid  at any moment a pipe cannot hold more water than its capacity  each cell however can receive water from any number of adjacent cells in particular there can be pairs of cells which send water directly to each other through two pipes with opposite directions  due to poor planning of the previous mayor the n⋅mn⋅m pipes do not have optimal capacities or directions  ahmet employs faruk the engineer to rectify this network  faruk does not have much time so he may only perform up to kk operations  in each operation he should  choose some outgoing pipe with positive capacity decrease its capacity by  rotate it  degrees clockwise i e  change its direction in one of the following ways up to right right to down down to left or left to up  faruks goal is to maximise the amount of water that can be sent from the cell  to the cell nmnm per unit of time  specifically for each simple path along pipes from the cell  to nmnm in the final network consider the minimum of capacities of pipes in this path the amount of water that can be sent from  to nmnm per unit of time is the maximum of these minimum values or  if there is no valid path  help faruk determine this maximum possible amount of water that can be sent from the cell  to the cell nmnm  note that it is not required to minimise the number of clockwise rotations  also note that the capacity and direction of the pipe from the cell nmnm do not affect the answer but have been given on the input for uniformity  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains three spaceseparated integers nn mm and kk  nn lines follow  for each valid ii the iith of these lines contains mm spaceseparated integers aiai…aimaiai…aim  nn more lines follow  for each valid ii the iith of these lines contains a single string with length mm for each valid jj the jjth character of this string denotes the direction dijdij of the pipe from the cell ijij u denotes an outgoing pipe directed upwards ― to the cell i−ji−j r denotes an outgoing pipe directed to the right ― to the cell ijij d denotes an outgoing pipe directed downwards ― to the cell ijij l denotes an outgoing pipe directed to the left ― to the cell ij−ij−  output for each test case print a single line containing one integer ― the maximum amount of water that can reach the cell nmnm per unit of time  constraints  ≤t≤≤t≤ ≤nm≤≤nm≤ ≤n⋅m≤n⋅m ≤k≤≤k≤ ≤aij≤≤aij≤ for each valid ijij dijdij is u r d or l for each valid ijij the sum of n⋅mn⋅m over all test cases does not exceed   example input               drr duu url  example output    explanation example case  water can flow from  down to  then again down to  then right to  and again right to   since the initial direction of the pipe from the cell  is upwards we need to change it using one operation after this operation it is directed right and its capacity is   all other pipes have correct directions  this path gives the maximum possible amount of water which is   example input        dl      d l      lr             rrd rdd ldu  example output       example input               ull llr rld             dru lrl rdd             udu lru lrd             udr dll rdd  example output        author ★rlukaku editorial  codechef comproblemswatra tags                                   binarysearch cook dijkstraalgorithm easymedium rlukaku                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit