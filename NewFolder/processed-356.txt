 utkarsh has a permutation pp of …n−…n−  he wants to find the number of pairs lrlr ≤lr≤n≤lr≤n such that swapping the elements plpl and prpr does not change the mex of any subarray  formally find the number of pairs lrlr ≤lr≤n≤lr≤n satisfying the following condition  let p′p′ be the permutation defined as follows p′ipipi′pi for i∈…n∖lri∈…n∖lr p′lprpl′pr p′rplpr′pl mexpipi…pjmexp′ip′i…p′jmexpipi…pjmexpi′pi′…pj′ for every ≤i≤j≤n≤i≤j≤n  for example let nn and pp  then  swapping the pair  i e swapping pp and pp would give us the permutation p′p′  this changes the mex of the subarray  because mexppmexmexppmex but mexp′p′mexmexp′p′mex so  is not a valid swap  swapping the pair  gives us the permutation p′p′  this changes the mex of the subarray  — mexpmexmexpmex and mexp′mexmexp′mex  so  is also not a valid pair  however it can be verified that the pair  is valid — swapping pp and pp gives us the permutation p′p′ and mexpi…jmexp′i…jmexpi…jmexp′i…j for every ≤i≤j≤≤i≤j≤   input format  the first line of input will contain an integer tt the number of test cases  then the test cases follow  description of each test case the first line contains a single integer nn denoting the size of the permutation pp  the second line contains nn spaceseparated integers pp…pnpp…pn denoting the permutation pp   output format for each test case output on a new line the number of pairs lrlr such that swapping plpl and prpr does not change the mex of any subarray  constraints  ≤t≤≤t≤ ≤n≤≤n≤ sum of nn over all test cases does not exceed ⋅⋅ it is guaranteed that pp is a permutation of …n−…n−                          sample input                                                                   sample output                              explanation test case  there are no valid pairs  test case  there is only one valid pair lrlr i e swapping pp and pp to obtain the permutation    author utkarshadm tags                                   constructive easymedium greedy ltime utkarshadm                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit