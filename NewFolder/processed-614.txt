 read problems statements in hindi mandarin chinese russian vietnamese and bengali as well  two of your friends lets denote them by pp and qq are playing a game and you are acting as their dealer  the rules of the game are as follows  there are nn bracket sequences denoted by ss…snss…sn  initially both players do not have any sequences  they play up to nn turns  for each valid ii in the iith turn you have to choose one player and give the bracket sequence sisi to this player  after each turn if it is possible to arrange all the sequences of one player in some order and concatenate them in such a way that the resulting bracket sequence is nonempty and balanced that player immediately wins and the game ends  note that it is impossible for both players to form nonempty balanced sequences at the same time   you like pp more and hence want pp to win  find the smallest number of turns you need in order to make pp win or determine that it is impossible to achieve this  notes  a bracket sequence is an arbitrary string containing only characters  and   a balanced bracket sequence is one of the following an empty string  a concatenation of two nonempty balanced bracket sequences  a string formed by adding  to the beginning and  to the end of a balanced bracket sequence   input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn  nn lines follow  for each valid ii the iith of these lines contains a single string sisi   output for each test case print a single line containing one integer ― the smallest number of turns needed to make pp win or −− if it is impossible  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤si≤≤si≤ for each valid ii                         sample input                                                           sample output                             explanation example case  you can give ss to qq and ss and ss to pp   author ★smartnj editorial  codechef comproblemsbrbal tags                                   dynamic programming binary search                                                              algorithms searching                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit