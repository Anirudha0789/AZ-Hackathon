 read problem statements in bengali mandarin chinese russian and vietnamese as well  only a few centuries later the berland government realized what was necessary for the countrys prosperity  thats right a dakimakura for every resident of berland it is known that berland consists of nn cities where cici people live in city ii and it takes titi hours to get from city ii to city ii  the government is ready to allocate xx tugriks for the implementation of the project to give out dakimakuras  they also agreed with local producers so the dakimakuras themselves are free  to implement the project the government can open a branch for issuing dakimakuras free of charge in several cities  for each city with an open branch for issuing dakimakuras the government can pay  tugrik to increase its productivity by  unit  it can be increased any number of times so that a productivity of kk units costs kk tugriks  then the issuance of dakimakuras begins  for each resident of the country that is located in city ii heshe will travel to the first city with index greater or equal to ii that has a branch  recall it takes titi hours to travel from city ii to ii  after arrival heshe enters the queue in the branch  for each branch it handles the queue as follows   let the productivity of this branch be pp  if there are less than pp people in the queue then the branch issues dakimakuras to everyone in the queue  otherwise it starts with the first pp people and gives them dakimakuras  a branch can only give dakimakuras every hour that is integer times since the start  also a resident cannot receive a dakimakura at the same moment heshe enters the queue   you must find the minimum amount of time required for the government to issue dakimakuras to all residents of berland spending no more than xx tugriks in total  assume all the residents start travelling at the same time and the branches also opened at hour   input  the first line contains a single integer tt  the number of test cases  then tt test cases follow  the first line of each test case contains two integers nn and xx  the number of cities in berland and the maximum amount of tugriks that the government can spend  the second line contains nn integers c…cnc…cn  the third line contains n−n− integers t…tn−t…tn−   output for each test case print in a single line the answer to the problem  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤x≤≤x≤ ≤ci≤≤ci≤ ≤ti≤≤ti≤  subtasks  subtask   points ≤n≤≤n≤ ≤xti≤≤xti≤ and ≤ci≤≤ci≤ subtask   points xx subtask   points ≤n≤≤n≤ subtask   points original constraints  sample input                         sample output    explanation the first test case lets open a branch in city  with productivity  and one in city  with productivity   then in the th hour  people in city  and  people in city  will enter the queues in their respective cities  meanwhile the people in cities  and  will travel to the next city  then in the st hour  people in city  and  people in city  will receive dakimakuras  now the numbers of remaining people in each city are   then in the nd hour  people in city  and  people in city  will receive dakimakuras  now the numbers of remaining people in each city are   then in the rd hour  people in city  and  people in city  will receive dakimakuras  now every resident in berland has received a dakimakura so the process took  hours   author ★fairywinx editorial  codechef comproblemsdakimaku tags                                   arithmetic bottomup binary search                                                              mathematics basic maths algorithms dynamic programming dp approach searching                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit