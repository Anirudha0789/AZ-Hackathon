  read problems statements in mandarin chinese  and russian  mike likes to invent new functions  the latest one he has invented is called forbiddensum  lets consider how it can be calculated you are given a set s of positive integers  the integers are not necessary distinct  forbiddensum of s equals to the minimal nonnegative integer that cant be returned by the algorithm described below  choose a random subset s of sit can be empty as well tcalculate the sum of all the numbers of s and assign it to the variable t treturn the value of the variable t  t i e  if s      the algorithm can return s   s   s    s   s    s     but it cant return   so forbiddensum of s equals to   inventing of new function is not the only mikes hobby  also he likes to collect rare and unusual arrays  he is going to share with you one of them   formally mike gives you one array a consisting of n positive integers  after that he asks you m questions two integers li and ri describe ith question what does forbiddensum of sali ali     ari ari equal to  input   the first line contains the only integer n  the second line contains n integers  the array a  a is indexed  the third line contains the only integer m  the following m lines contain two integer numbers  ≤ li ≤ ri ≤ n each  xa output output should consists of m lines  the ith line should contains the answer to the ith question  xa constraints  ≤ n m ≤     ≤ ai ≤     ≤ a  a       an ≤  xa example input                   output       xa explanation in the example test there are m questions  we wont describe all of them only two ones  the first question in the first test case s equals to   the answer is  because we can recieve  in case the algorithm chooses s    but there are no chances to receive   the second question in the first test case s equals to    the answer is  because we can recieve  in case the algorithm chooses s    in case the algorithm chooses s   and  in case the algorithm chooses s     but there are no chances to receive    author ★kostyaby tester ★whiteking editorial  codechef comproblemsfrbsum tags                                   persistent segment trees binary search                                                              advanced data structures persistent structures algorithms searching                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit