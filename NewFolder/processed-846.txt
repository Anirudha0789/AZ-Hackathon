 read problems statements in mandarin chinese russian and vietnamese as well  the mongoose land consists of n cities and they are connected by n   bidirectional roads in such a manner that you can travel from one city to another city in exactly one path  in other words the map looks like a tree  the cities are numbered from  to n  king cobra has decided that he wants to eliminate the mongooses and is hence preparing to wage a war  the snakes have recently procured airplanes and thus they can parachute their soldiers onto some of the mongoose land cities  suppose on day  these soldiers are parachuted  you know that to capture city i you need to parachute in pi soldiers  by end  of day  they would have captured their respective cities  each city depends on its neighbors for some of its supplies and so if a certain number of its neighbors are captured then this city will fall as well  in particular for every city i you know that if city i was uncaptured on day d and at least ci of its neighbors are captured on day d then this city will be captured on day d where d ≥   a city which has been captured will forever remain captured  king cobra doesnt mind waiting for however long it takes to capture the entire mongoose kingdom but he wants to do it with the least number of soldiers  help him find the least number of soldiers he should send so that the entire mongoose kingdom can be captured eventually  formally you need to find a subset of cities s such that the sum of pi over these cities is minimized and the entire kingdom will be captured eventually if soldiers are parachuted into exactly these cities  you need to output this minimum sum  input  the first line contains a single integer t denoting the number of testcases  the description of each testcase follows  the first line of each testcase contains a single integer n the number of cities in mongoose land the ith of the next n   lines contain two integers each ui and vi which denote that there is an edge between cities ui and vi  the next line contains n integers p p     pn  pi denotes the number of soldiers which have to parachuted in so as to capture city i on day   the next line contains n integers c c     cn  ci denotes the number of neighbors of city i that have to be captured for city i to be captured on the next day   output  for each testcase output a single integer which is the minimum total number of soldiers who have to be parachuted in on day    constraints   ≤ t ≤   ≤ n ≤     ≤ ui vi ≤ n  ≤ pi ≤   ≤ ci ≤ degree of city i   example input                                  output   explanation one of the optimal solutions is to parachute into cities   and  on day   so the total number of soldiers needed  p  p  p          now we will show that this is indeed a valid solution  for that we need to show that eventually all the cities will be captured  we will show the cities captured on every day in sequence  day  the cities captured are the ones parachuted into and they are     day  city  has one of its neighbors city  captured  and since c   this is enough for city  to be captured  similarly since c   and city  is a neighbor of city  city  is also captured  so cities captured on day         day  city  has c   and one of its neighbors is captured city   hence it is captured now  city  has c   and three of its neighbors cities   and  have been captured  hence it is also captured  therefore the cities captured at the end of day  are         day  city  has c   and since city  has been captured it is also captured now  so by the end of day  all  cities have been captured  this cannot be achieved with fewer soldiers and hence the answer is    author admin tester ★kingofnumbers editorial  codechef comproblemscaptciti tags                                   dp on trees dfs                                                              advanced algorithms advanced dp algorithms graph algos traversals                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon scm chicken pike scm qobi st nem  submit