 read problems statements in mandarin chinese russian vietnamese and bengali as well  this is an interactive problem  there is a hidden undirected graph with nn vertices  there are no selfloops or multiple edges  each vertex is colored black or white and the colors are also hidden from you  to make a query you choose a vertex vv  the interactor will respond with the current color of vv and then it will flip the colors of all vertices adjacent to vv  a vertex is not considered adjacent to itself so the color of vv doesnt change  after at most  queries find the adjacency matrix of the graph  note the interactor is not adaptive  in other words the graph and colors are fixed in the beginning  interaction begin the interaction by reading a single integer nn  the number of vertices in the graph  to ask a query output  v for a vertex vv ≤v≤n≤v≤n  then read a single character describing the current color of vv where b denotes black and w denotes white  after making this query the colors of all vertices adjacent to vv will flip  to print the answer output  then on the next nn lines print nn strings of length nn consisting of symbols  and   the jjth character of the iith string should be  if and only if there is an edge between vertices ii and jj  since there are no selfloops the main diagonal should contain only   if at any time you make an invalid query or exceed the query limit the interaction is terminated and you will receive a wrong answer verdict  remember to flush the output after printing each line constraints  ≤n≤≤n≤                         sample input                              w  b  b  w                          sample output                                            explanation the example is given to demonstrate how the queries work and it is not guaranteed that the answer can be uniquely determined from the queries in the example  the hidden graph is a path −−−−  initially the colors for nodes    are white black black respectively  denote it by the string wbb  the first query asks for node   the interactor responds with its color w then flips the color of node   the colors are now wbw  the second query asks for node   the interactor responds with its color b then flips the color of node   the colors are now wbb  the third query asks for node   the interactor responds with its color b then flips the colors of nodes  and   the colors are now bwb  the fourth query asks for node   the interactor responds with its color w then flips the color of node   the colors are now bww  then the correct adjacency matrix is guessed   author monogon editorial  codechef comproblemscolrgrph tags                                   graphs interactive problems constructive observation                                                              data structures special algorithms                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit