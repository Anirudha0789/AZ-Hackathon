  problem description  we have already studied about many sorting techniques such as insertion sort bubble sort selection sort quick sort merge sort heap sort etc  here i will talk about a different type of sorting technique which is called as “radix sort” and is probably the best sorting technique as far as time complexity is concerned  operations which are performed in radix sort is as follows  do following for each digit i where i varies from least significant digit to the most significant digit  ………… a sort input array using counting sort or any stable sort according to the i’th digit  example original unsorted list        sorting by least significant digit s place gives notice that we keep  before  because  occurred before  in the original list and similarly for pairs    and             sorting by next digit s place gives notice that  again comes before  as  comes before  in the previous list          sorting by most significant digit s place gives         hence we get a sorted sequence for the corresponding random sequence  for a given set of n random numbers generate a sorted nondecreasing order sequence using above discussed technique input first line of input will consist of a single integer n denoting the size of the sequence  second line will consist of n space separated random integers  output print the sorted sequence of n numbers from the given sequence  constraints n ai   example input        output       input           output         xa explanation example  is explained in the problem statement  author ★kumarranjan editorial  codechef comproblemsrdx tags                                   kumarranjan queue sorting                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyp php  submit