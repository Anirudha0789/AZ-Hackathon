  read problems statements in mandarin chinese  russian and vietnamese as well  you are given an array a consisting of n integers and an array b consisting of m integers  the subsequence of a is the array that can be obtained by picking the elements at the arbitrary sorted set of positions from a  your task is to count the number of such subsequences c of a that  c contains exactly m elements  the array cb is nondecreasing  here by  operation we mean elementwise sum   for example the array    plus the array    is     formally cb is an array of size m such that cbi  ci  bi  in case some subsequence appears more that once you should counts it as many times as it appears  formally two subarrays of an array a ai ai     ain and aj aj     ajm will be considered different if either their lengths are different i e  n  m or there exists an index k such that such that ik   jk   since the answer can be very large we ask you to calculate it modulo   input the first line of input contains a pair of space separated integers n and m denoting the number of elements in the array a and the number of elements in the array b  the second line contains n spaceseparated integers ai denoting the array a  the third line contains m spaceseparated integers bj denoting the array b  output output a single line containing the number of subsequences c as asked in the problem modulo   constraints   ≤ ai bi ≤   ≤ m ≤ n  subtasks  subtask   points  ≤ n ≤   ≤ m ≤  subtask   points  ≤ n ≤   ≤ m ≤  subtask   points  ≤ n ≤   ≤ m ≤   example input             output    input           output    explanation example case   the suitable subsequences are              example case   the suitable subsequence is   and it appears  times  at indices   at indices   at indices   at indices   at indices   at indices   so the answer is    author sergeyadm tester ★zedthirtyeight editorial  codechef comproblemsarraysum tags                                   data structures segment trees fenwick trees coordinate compression dynamic programming                                                              advanced data structures advanced tree structures advanced algorithms pre processing algorithms                                                                                        difficulty rating                        date added  time limit    secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon scm chicken pike scm qobi st nem  submit