 consider a weighted undirected and connected graph with n nodes numbered  to n and m edges  find the minimum cost of any walk from node s to node t  via node v visiting node v is compulsory  where cost of a walk is the sum of weights of distinct edges occurring in the walk  this means that even if an edge occurs multiple times in a walk its weight is added only once to the cost of the walk  warning large input data use faster methods for input   input the first line contains an integer t  the number of test cases  t test cases follow the first line of each test case contains  space seperated integers n and m  the next line contains  space seperated integers s t and v  the next m lines contain  space seperated integers each a b c  denoting an edge between nodes a and b with weight c  note there is at most one edge between any pair of nodes and there are no self loops  output  output the required answer for each test case on a separate line  constraints   ≤ t ≤   ≤ n ≤   ≤ stv ≤ n n ≤ m ≤ minnn  ≤ a b ≤ n  ≤ c ≤   example input                               output    explanation  test case  the walk with least cost is  note that the edge  occurs twice in the walk but its weight is added only once to the walk                                                                                      author ★gvaibhav editorial  codechef comproblemsminwalk tags                                   dijkstraalgorithm easymedium graphs gvaibhav shortestpath                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon scm chicken pike scm qobi st nem  submit