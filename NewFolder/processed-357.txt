 i hope all of you remember that chef built a hotel balifornia in byteland and some complicated scheme for allocating guests invented by lift boy was used  but after realizing all badness of this scheme chef fired lift boy and simplifies the process of allocating guests drastically  now at the time of checkin each guest only provides the preferable room for him and the number of minutes he will stay in the hotel  after that the hotel manager finds the first available room starting from the provided one assuming that rooms in the hotel are arranged in cyclic manner  namely let there be r rooms in the hotel and they are numbered by numbers from  to r −  inclusive  suppose guest chooses the room k  then the hotel manager checks rooms in orderk k   k       r −  r −         k −  k −  and allocates the guest in the first free room in this list or report the guest that all rooms are occupied if this is the case  chef has a logbook where hotel manager writes down information about each guest  namely he records the visit time the preferable room for the guest not the actual room where guest will live the staying time and the inconvenience caused to the guest which equals to the number of occupied rooms that hotel manager checks in the list above before allocating the guest or r if all rooms are occupied  the visit time is provided in minutes after the moment when hotel was opened for visits  before the first visit all rooms in the hotel were free  when guest leaves the room it could be occupied at the same moment of time by another guest if exactly at this moment the visit occurs  but lift boy prepared the revenge to the chef  just before the inspection of the hotel he has erased the second and the third entry of each visit in the logbook that is the preferable room and staying time for each guest  chef needs to recover the damage quickly since only a few hours left before inspector visit  he knows about your advanced skills in programming and asks you for help  he will be satisfied by any consistent recover of the data  that is if inspector will reproduce the process of allocating guests using the visit time the preferable room and the staying time for each guest he will obtain the correct value of the inconvenience caused to each guest  input the first line of the input contains an integer t denoting the number of test cases  the description of t test cases follows  the first line of each test case contains two spaceseparated integers r and n denoting the number of rooms and the number of visits respectively  the description of n damaged records in logbook follows  namely each of the following n lines contains  space separated integers time and inconv denoting the time of the visit and inconvenience caused to the guest  output for each test case output n lines  the ith line among them should contain two space separated integers room and staytime the room chosen by the ith guest and the time he will stay in the hotel room should be from  to r −  inclusive and staytime should be from  to  inclusive  if there are several possible answers you can output any of them  but your output should be consistent as stated above  existence of such answer is always guaranteed for our test data see constraints section below  constraints  ≤ t ≤   ≤ r ≤   ≤ n ≤   ≤ time    ≤ inconv ≤ r the sum of r over the input does not exceed  the sum of n over the input does not exceed  visit times will be given in strictly increasing order it is guaranteed that records in logbook could be recovered consistently  note that time is strictly less than   it is quite important  example input                         output                 explanation example case   here r   and n    lets check that provided output is consistent  the first guest comes at time  and asks for room  for  minutes  since the hotel is initially empty we settle him at this room causing zero inconvenience  the second guest comes at time  and asks for room  for  minutes  the first guest made this room free at time  so at time  it is free and we settle the second guest at room  causing zero inconvenience  example case   here r   and n    again lets check that provided output is consistent  the first guest comes at time  and asks for room  for  minutes  since the hotel is initially empty we settle him at this room causing zero inconvenience  the second guest comes at time  and asks for room  for  minutes  but the first guest is still living in this room he will free it at time   therefore we settle the second guest at the room  the next after  in cyclic manner causing inconvenience   finally the third guest comes at time  and asks for room  for  minutes  this room is free and we settle him at this room causing zero inconvenience  example case   here r   and n    and again lets check that provided output is consistent  the first guest comes at time  and asks for room  for  minutes  since the hotel is initially empty we settle him at this room causing zero inconvenience  the second guest comes at time  and asks for room  for  minutes  this room is free and we settle him at this room causing zero inconvenience  the third guest comes at time  and asks for room  for  minutes  but both rooms in the hotel are occupied room  will be free at time  and room  will be free at time   hence we do not settle this guest in any room causing him inconvenience   note that stay time of such a guest actually doesnt matter  you could output any number from  to  inclusive instead of    author ★antonadm tester ★laycurse editorial  codechef comproblemshob tags                                   greedy adhoc                                                              algorithms constructive                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages java c cpp pyp  submit