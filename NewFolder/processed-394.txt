 robert is a maths teacher and he made a question for his students  question is a matrix of nn x nn with all distinct elements from   to n∗nn∗n  one has to apply maxpool function of filter matrix  x  to get the answer that is for each  x  matrix you have to write the maximum element in corresponding matrix of size n−n− x n−n−  for example if nn   and matrix given is             then after applying maxpool function we get      robert is a careless person and forgot the actual question or nn x nn matrix but he knows the answer or n−n− x n−n− matrix  can you help him to derive any valid question matrixmust contain all the numbers from  to nn  nn  back from the answer given inputs are given in such a way that the answer always exists  in case of multiple answers print any  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn the size of the question matrix or matrix before the filter is applied  next n−n− lines contains n−n− spaceseperated integers in each line   output  for each test case print the matrix of size nn x nn   print nn lines where each line will contain nn integers separated by a space   constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤aij≤n∗n≤aij≤n∗n  for all ≤ij≤n−≤ij≤n− and aa is the matrix after the filter is applied   example input          example output                author ★adikrsingh editorial  codechef comproblemsmaxpool tags                                   d arrays greedy adhoc                                                              data structures arrays algorithms constructive                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit