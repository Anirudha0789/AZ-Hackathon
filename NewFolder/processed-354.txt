 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  you are given a tree with nn vertices numbered  through nn and a sequence of integers aa…anaa…an  you may choose an arbitrary permutation pp…pnpp…pn of the integers  through nn  for each valid ii you should assign the value apiapi to vertex ii  then you should choose a vertex of the tree and k−k− times perform one of the following operations  move forward — move to a vertex which is adjacent to your current vertex  however you must not move to the vertex in which you were immediately before the previus operation if it exists  turn around — stay in your current vertex  you may only do this if it is impossible to move forward  since you do not move in this operation you may move forward again afterwards   in this process you obtain a sequence of vertices vv…vkvv…vk — the initial vertex and the vertices in which you were after each operation  your score is ∑kiapvi∑ikapvi  what is the maximum possible value of this score input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains two spaceseparated integers nn and kk  the second line contains nn spaceseparated integers aa…anaa…an  each of the following n−n− lines contains two spaceseparated integers uu and vv denoting that vertices uu and vv are connected by an edge   output for each test case print a single line containing one integer — the maximum possible score  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤k≤≤k≤ ≤ai≤≤ai≤ for each valid ii the sum of nn over all test cases does not exceed ⋅⋅  subtasks subtask   points  n≤n≤ k≤k≤ the sum of nn over all test cases does not exceed  the sum of kk over all test cases does not exceed   subtask   points original constraints                          sample input                                                                              sample output                               explanation example case  we start at vertex  move forward to vertex  then turn around without moving anywhere and end the process  the score is    author ★ahmadsalah tags                                   ahmadsalah dynamicprogramming easy greedy ltime rajarshibasu trees                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit