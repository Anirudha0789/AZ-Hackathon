  sridhar was a seasoned traveler  he liked to visit new places  more than all he was a meticulous planner  this time he was planning to visit europe  he wrote down his travel itinerary like as follows  if he wanted to visit madrid paris munich warsaw and kiev in this order he would write it down like as  madrid paris  paris munich  munich warsaw  warsaw kiev  more formally if he wanted to go from a to b directly and the price is c dollars then he would write   a b c  on a card  each move was written on a different card  sridhar was a great planner so he would never visit the same place twice  just before starting his journey the cards got shuffled  help sridhar figure out the actual order of the cards and the total cost of his journey   input  the first line of the input contains an integer t the number of test cases  t test cases follow  each case contains an integer n the number of cities sridhar is planning to visit  n lines follow  each line is of the form   ai bi ci  where the ith line refers to the ith card after getting shuffled   output  for each case the output contains n lines the first n lines should contain the n cards in their proper original order the nth line should contain the total cost of the travel  see example for detailed format   constraints   ≤ t ≤    ≤ n ≤    ≤ length of ai ≤    ≤ length of bi ≤    ≤ ci ≤  ai bi will contain only lowercase and uppercase latin characters no two cities will have same names  the names of cities are casesensitive  so warsaw and warsaw should be considered as different cities   example input   warsaw kiev  madrid paris  munich warsaw  paris munich   output madrid paris  paris munich  munich warsaw  warsaw kiev     author kaushadm tester ★laycurse editorial  codechef comproblemstourmap tags                                   graphs sets maps hashmaps dfs topological sorting adhoc                                                              data structures algorithms graph algos traversals dag algos constructive                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit