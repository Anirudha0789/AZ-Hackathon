 your school has ordered some equipment that has been delivered in a number of very heavy cartons  each carton has a serial number ss and the cartons are all lined up in a row  unfortunately your teacher asked for the cartons to be placed in a particular sequence and you forgot to tell the people who unloaded the cartons about this  you now have to quickly restore the cartons to the correct order before the teacher comes and sees how you have messed up her instructions  since the cartons are very heavy you cannot carry them over long distances  in each step all you can do is to exchange the position of two adjacent cartons  for instance suppose the serial numbers on the cartons in the order in which they are unloaded are  and the order in which the cartons were supposed to be arranged is   these cartons can be rearranged in the desired order with  exchanges as follows  exchange  —  exchange  —  exchange  —  exchange  —  exchange  —  exchange  —  exchange  —   in this example it can be shown that  exchanges are needed to reorder the cartons as desired  clearly you want to get the job done with minimum eﬀort  given the initial arrangement of the cartons and the ﬁnal sequence that the teacher wants your goal is to compute the minimum number of exchanges required to rearrange the cartons in the desired order  input format  the ﬁrst line of input is a single integer nn the total number of cartons   the second line consists of nn distinct positive integers separated by spaces denoting the serial numbers of the nn cartons in the order in which they were unloaded  the third line is another sequence of nn integers denoting the desired order in which the nn cartons should be rearranged  the sequence of numbers in the third line is guaranteed to be a permutation of the sequence in the second line   output format the output should be a single integer the minimum number of exchanges required to achieve the desired sequence of cartons  constraints  ≤n≤≤n≤ ≤s≤⋅≤s≤⋅  subtasks  subtask   points ≤n≤≤n≤ subtask   points original constraints                          sample input                                                                 sample output                             explanation explained in statement  author ★yogesh tags                                   hashmaps segment trees fenwick trees                                                              data structures advanced data structures advanced tree structures                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit