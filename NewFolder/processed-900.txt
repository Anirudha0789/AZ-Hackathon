 sagar came to a gym  sagar is a lazy kind of person so his trainer gave him a task to run on a new type of treadmill from the beginning to the end  the treadmill is a looped belt with a total length of ll meters of which ll meters are located on the surface and are arranged in a straight line  the part of the belt which turns at any moment the part which emerges from under the floor to the surface and returns from the surface under the floor is assumed to be negligibly short  the belt is moving uniformly at speed vv meters per second  sagar will be moving on it in the same direction at the constant speed of vv meters per second so his speed relatively to the floor will be vvuuvv meters per second  sagar will neither stop nor change the speed or the direction of movement  there are blocks of very small height stuck to the belt nn blocks  they move together with the belt and do not come off it  sagar has to kickout the blocks but he is more keen to move forward  so he will kick out all the blocks he will pass by but nothing more  if a block is at the beginning of the belt at the moment when sagar starts running he will kick it out and if a block is at the end of the belt at the moment when sagar comes off the belt he will leave it  you are given the positions of the blocks relative to the initial start position of the belt u≤uaauuaauu…uuananuull  the positions on the belt from  to ll correspond to the top and from ll to ll — to the the bottom half of the belt see example  all coordinates are given in meters   the figure shows an example with two blocks  one is located in the position    aauulu−udlu−ud and is now on the top half of the belt the second one is in the position    aauulu−udlu−ud and is now on the bottom half of the belt  sagar begins to run along the belt at a random moment of time  this means that all possible positions of the belt at the moment he starts running are kickable  for each  ii  from  to nn calculate the probability that sagar will kick out exactly ii blocks also print the minimum of blocks with the lowest probability of kickout and maximum blocks with highest probability of kickout   input format  the first line contains spaceseparated integers nn ll vv and vv — the number of the blocks the length of the treadmills visible part the treadmills speed and sagars speed respectively  the second line contains a sequence of spaceseparated integers aauaau…uanan u≤uaauuaauu…uuananuull — the coordinates of the blocks   output format  print nnuu numbers one per line the probabilities that sagar kicks out exactly ii blocks for each ii from  the first line to nn the last line  the answer must be of exactly  decimal places  in next line print the minimum blocks with the lowest probability of kickout and the maximum blocks with highest probability of kickout    constraints  ≤n≤≤n≤ ≤lvv≤≤lvv≤                         sample input                                                          sample output                                  explanation sagar can kickout a block if by the moment he starts running its coordinate is less than   but if by  the moment the he starts running the blocks coordinate is greater than or equal to   then he wont be  able to kick it out  as all positions of the belt are kickable the probability of kicking out the block  equals      and the probability of not picking it up equals      as the highest probability is of  block  the lowest probability is of  blocks                           sample input                                                           sample output                                     author ★abs editorial  codechef comproblemslzlyf tags                                   abs math medium probability sorting tcpc                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit