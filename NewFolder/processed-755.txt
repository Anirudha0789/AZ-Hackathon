 you are given nn integers aa…anaa…an  determine whether they can be reordered such that each pair of consecutive differences differ by a factor of   formally determine whether there exists a rearrangement of the given integers into an array bb…bnbb…bn such that for each ≤i≤n−≤i≤n− at least one of the following two conditions holds  bi−bi−⋅bi−bibi−bi−⋅bi−bi or ⋅bi−bi−bi−bi⋅bi−bi−bi−bi  note that different conditions can hold at different indices — the only restriction is that at each index at least one of the given conditions must hold  please see the sample tests below for examples  input format  the first line of input will contain a single integer tt denoting the number of test cases  the description of tt test cases follows  each test case consists of two lines of input  the first line of each test case contains a single integer nn  the second line of each test case contains nn spaceseparated integers denoting aa…anaa…an   output format for each test case output in a single line the answer — yesyes if a rearrangement that satisfies the given conditions exists and nono otherwise  the output is not case sensitive so for example the strings yes yes yesyes yes yes etc  will all be treated as correct   constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤ai≤≤ai≤ the sum of nn across all test cases wont exceed                          sample input                                                                             sample output                            yes yes no yes explanation test case  rearrange the numbers to form   the consecutive differences are −−−−−−−− and −⋅−−⋅−  test case  one possible rearrangement is   the consecutive differences are consecutive powers of   test case  no rearrangement of the numbers satisfies the condition  for example one rearrangement is  with consecutive differences −−−−   and −− do not differ by a factor of  they differ by a factor of −− so this is not a valid arrangement   author trygubadm editorial  codechef comproblemsdoubleddist tags                                   adhoc cook sorting trygubadm                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit