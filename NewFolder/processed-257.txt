  the little elephant loves lucky strings  everybody knows that the lucky string is a string of digits that contains only the lucky digits  and   for example strings    are lucky while    are not  the little elephant has the strings a and b of digits  these strings are of equal lengths that is a  b  he wants to get some lucky string from them  for this he performs the following operations  at first he arbitrary reorders digits of a  then he arbitrary reorders digits of b  after that he creates the string c such that its ith digit is the maximum between the ith digit of a and the ith digit of b  in other words ci  maxai bi for i from  to a  after that he removes from c all nonlucky digits saving the order of the remaining lucky digits  so c now becomes a lucky string  for example if after reordering a   and b   then c is at first  and then it becomes   the little elephant wants the resulting string to be as lucky as possible  the formal definition of this is that the resulting string should be the lexicographically greatest possible string among all the strings that can be obtained from the given strings a and b by the described process   notes a denotes the length of the string a  ai denotes the ith digit of the string a  here we numerate the digits starting from   so  ≤ i ≤ a  the string a is called lexicographically greater than the string b if either there exists some index i such that ai  bi and for each j  i we have aj  bj or b is a proper prefix of a that is a  b and first b digits of a coincide with the corresponding digits of b  input  the first line of the input contains a single integer t the number of test cases  t test cases follow  each test case consists of two lines  the first line contains the string a  the second line contains the string b   output  for each test case output a single line containing the answer for the corresponding test case  note that the answer can be an empty string  in this case you should print an empty line for the corresponding test case   constraints   ≤ t ≤  ≤ a ≤  a  b each character of a and b is a digit  sum of a across all the tests in the input does not exceed                           sample input                                                              sample output                                explanation  case   in this case the only possible string c we can get is  and it is the lucky string  case   if we reorder a and b as a   and b   the string c will be at first  and then becomes   it can be shown that this is the lexicographically greatest string for the given a and b  case   in this case the only possible string c we can get is  and it becomes and empty string after removing of nonlucky digits  case   if we reorder a and b as a   and b   the string c will be at first  and then becomes   note that we can construct any lexicographically greater string for the given a and b since we have only four sevens and two fours among digits of both strings a and b as well the constructed string     author ★witaliyadm tags                                   frequency arrays greedy adhoc observation                                                              data structures arrays algorithms constructive                                                                                        difficulty rating                        date added  time limit   secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit