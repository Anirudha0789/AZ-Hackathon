  problem statement you are given an array of nn integers and there are  people pp and pp    each person picks up any one element and adds its value to their score  initially the score of both pp and pp is    however the person who plays second can take two elements in hisher first try and then both will take one element in alternate turns    example if pp goes first then the pickup sequence can look like   p→p→p→p→p→p→p    p→p→p→p→p→p→p     each person wants to maximize hisher score and both of them play optimally   pp wants to win and is asking for your help  tell whether pp should play first or second  if both of them will get the same score independent of who plays first then output “draw”   note each element can be taken only once i e  once it is taken by some person it cannot be taken again    input first line contains an integer tt  the number of test cases  first line of each test case contains an integer nn  the number of elements in the array  second line of each test case contains nn space separated integers aa aa aa     aann   output for each test case print one line containing one of the following word without quotes  “first” if pp should play first  “second” if pp should play second  “draw” if both of them will get the same score independent of who plays first  note the output is case sensitive so “first” will be considered as wrong output   constraints    ≤t≤≤t≤   ≤n≤≤n≤   ≤≤ aaii ≤≤ where ≤i≤n≤i≤n  sample input           sample output second draw explanation there are two test cases  in the first test case the person who plays first will get the total sum   since the person who plays second will take both the remaining s  hence pp should play second   in the second test case both will get the sum   so it doesnt matter who plays first  it will always result in draw                                                                                      author ★djr editorial  codechef comproblemstowin tags                                   greedy sorting                                                              algorithms                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit