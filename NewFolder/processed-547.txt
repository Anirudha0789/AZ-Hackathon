 read problem statement in mandarin chinese and vietnamese  suzumo is the coach of the chefland oi team  physical condition is very important in any olympiad so he wants to make the children run a bit as a warmup  the team consists of nn children numbered  through nn standing at some positions on the xxaxis  for each valid ii the initial xxcoordinate of the iith kid is xixi the running velocity of the iith kid is constant and equal to vivi  suzumo wants to assign a running direction left or right i e  in the direction of decreasing or increasing xxcoordinate to each kid the children start running at time  in the assigned directions  afterwards suzumo will measure the smallest time tt at which some kid passes another one  help suzumo compute the maximum time tt if he can assign the directions arbitrarily note child ii passes child jj at time tijtij if their coordinates satisfy xixjxixj at any time ttijttij and xixjxixj at any time ttijttij or if they satisfy xixjxixj at any time ttijttij and xixjxixj at any time ttijttij  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn  nn lines follow  for each valid ii the iith of these lines contains two spaceseparated integers xixi and vivi   output for each test case print a single line containing one real number — the maximum possible time tt or −− if it is possible to assign directions in such a way that no kid ever passes another  your answer will be considered correct if it has an absolute or relative error less than or equal to −−  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤xivi≤≤xivi≤ for each valid ii no two children have the same initial positions                         sample input                                                             sample output                              explanation example case  one optimal assignment of directions is left right right   author ★alei editorial  codechef comproblemsrundir tags                                   greedy sorting binary search                                                              algorithms searching                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj d caml swift fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit