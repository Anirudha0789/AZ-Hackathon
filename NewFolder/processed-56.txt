 read problems statements in mandarin chinese and vietnamese as well  you are given an array aa with length nn  on each day the following process was performed  a new array rr is created this array contains all elements aiai such that ii inin or minai−ai≤aiminuai−ai≤ai ≤in≤in in the original order aa is replaced by rr and nn is replaced by the length of rr  in other words all elements of aa that are between two bigger elements disappear  for each element of the original array calculate the number of the day on which it disappeared the process starts with day  or determine that it never disappeared  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn  the second line contains nn spaceseparated integers aa…anaa…an   output for each test case print a single line containing nn spaceseparated integers  for each valid ii the iith of these integers should be the number of the day on which the iith element of the original array disappeared or  if it never disappeared  constraints  ≤t≤≤t≤ ≤n≤≤n≤ the sum of nn in all test cases does not exceed  ≤ai≤≤ai≤ for each valid ii  subtasks subtask   points the sum of nn in all test cases does not exceed  subtask   points original constraints                          sample input                                                             sample output                                   author ★kingofnumbers editorial  codechef comproblemsweakmid tags                                   stacks                                                              data structures                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj d caml swift fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit