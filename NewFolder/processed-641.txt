 ajeyaa and sriram are experimenting with a block simulator  the simulator generates a tower of nn blocks  each block in the tower has a unique value assigned to it  both of them decide to rearrange the tower to make it look aesthetically more pleasing with each having thought of a different way of doing it  ajeyaa wants to arrange them such that the block values are in ascending order from top to bottom while sriram wants the block values in descending order from top to bottom  to move a block one can take it out and insert it between any  blocks  it can also be placed on top or inserted at the bottom  it takes  seconds to move one block from its original position to any other position  unable to decide upon which method to use both of them agree to use the method which uses the shortest time that is they will arrange the blocks either in ascending or descending order from top to bottom depending on which method takes the shortest time  find whose arrangement will be final and also find the minimum number of blocks which need to be moved  input the first line contains one integer nn the number of blocks present  the next line consists of nn integers aa   anaa   an which represent the values present on the block from top to bottom  output the first line should be whose arrangement is used i e ajeyaaajeyaa or sriramsriram  if both of the methods use the same time then output the word bothboth without    the next line should be the minimum number of blocks which need to be moved  constraints  ≤n≤≤n≤ ≤ai≤≤ai≤  sample input          sample output sriram   explanation to obtain the arrangement              ascending order from top to bottom we need to move at least  blocks  first from the initial arrangement take  and insert it at the bottom  take  and  and then do the same  then insert  between  and   to obtain              descending order from top to bottom however we only need to move  blocks  we just have to insert   and  at the bottom  thus srirams method descending order from top to bottom is faster   author ★bluishgreen tags                                   binarysearch bluishgreen dynamicprogramming easymedium jp                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj d caml swift fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit