 lets call a number ono odd not odd if the number is an odd but the sum of its digits is not odd  e g      you will be given an integer number  find out if it is possible to make the number onoono by deleting somepossibly zero digits from the number  you can also shuffle the digits which will not count as a move  if it is possible then print the minimum number of digits  you need to remove in order to make the number onoono   if it is not possible to make the number onoono then just print −−  input  first line will contain tt number of testcases  then the testcases follow   each testcase contains of a single line of input one single integer nn    output for each testcase output in a single line minimum operation to make the number nn odd not odd  constraints  ≤t≤≤t≤ ≤n≤≤n≤  sample input    sample output   n b the idea of ububthe statement is inspired by a problem whose link will be given in the editorial   author ★samia editorial  codechef comproblemsono tags                                   greedy samia                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit