 chef discovered that his secret recipe has been stolen  he immediately informs the police of the theft  it is known that the policeman and thief move on the number line  you are given that  the initial location of the policeman on the number line is xx and his speed is  units per second  the initial location of the thief on the number line is yy and his speed is  unit per second   find the minimum time in seconds in which the policeman can catch the thief  note that the policeman catches the thief as soon as their locations become equal and the thief will try to evade the policeman for as long as possible  input format  the first line of input will contain an integer tt — the number of test cases  the description of tt test cases follows  the first and only line of each test case contains two integers xx and yy as described in the problem statement    output format for each test case output in a single line the minimum time taken by the policeman to catch the thief   constraints  ≤t≤≤t≤ −≤xy≤−≤xy≤                         sample input                                                            sample output                               explanation test case  the initial locations of the policeman and thief are  and  respectively  the minimum time taken by the policeman to catch the thief is  seconds and this happens when both the policeman and the thief move towards the right    test case  the initial location of the policeman and thief are  and  respectively  the minimum time taken by the policeman to catch the thief is  second and this happens when both the policeman and the thief move towards the left    test case  the initial locations of the policeman and thief are  and  respectively  because the police is already present at the location of thief the time taken by police to catch the thief is  seconds   author lavishadm editorial  codechef comproblemspolthief tags                                   cakewalk lavishadm math start                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit