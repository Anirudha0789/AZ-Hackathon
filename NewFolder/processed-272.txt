  read problems statements in mandarin chinese  and russian  devu is a class teacher of a class of n students  one day in the morning prayer of the school all the students of his class were standing in a line  you are given information of their arrangement by a string s  the string s consists of only letters b and g where b represents a boy and g represents a girl  devu wants intergender interaction among his class should to be maximum  so he does not like seeing two or more boysgirls standing nearby i e  continuous in the line  e g  he does not like the arrangements bbg and gbb but he likes bg gbg etc  now by seeing the initial arrangement s of students devu may get furious and now he wants to change this arrangement into a likable arrangement  for achieving that he can swap positions of any two students not necessary continuous  let the cost of swapping people from position i with position j i ≠ j be ci j  you are provided an integer variable type then the cost of the the swap will be defined by ci j  j − itype  please help devu in finding minimum cost of swaps needed to convert the current arrangement into a likable one  input the first line of input contains an integer t denoting the number of test cases  then t test cases are follow  the first line of each test case contains an integer type denoting the type of the cost function  then the next line contains string s of length n denoting the initial arrangement s of students  note that the integer n is not given explicitly in input  output for each test case print a single line containing the answer of the test case that is the minimum cost to convert the current arrangement into a likable one  if it is not possible to convert the current arrangement into a likable one then print  instead of the minimum cost  constraints and subtasks subtask   points  ≤ t ≤   ≤ n ≤  type   sum of n over all the test cases in one test file does not exceed   subtask   points  ≤ t ≤   ≤ n ≤  type   sum of n over all the test cases in one test file does not exceed   subtask   points  ≤ t ≤   ≤ n ≤  type   sum of n over all the test cases in one test file does not exceed   subtask   points  ≤ t ≤   ≤ n ≤  type can be   or  that is type ∈    note type of the first  test cases is   so ci j    hence we just have to count minimum number of swaps needed                           sample input                              bb  bg  bbgg  bgg  bggb  bbbgg  bbgg  bgb                          sample output                                    explanation example case   there is no way to make sure that both the boys does not stand nearby  so answer is   example case   arrangement is already valid  no swap is needed  so answer is   example case   swap boy at position  with girl at position   after swap the arrangement will be bgbg which is a valid arrangement  so answer is   now type of the next  test cases is   so ci j  j  i that is the absolute value of the difference between i and j  example case   swap boy at position  with girl at position   after swap the arrangement will be gbg which is a valid arrangement  so answer is       example case   swap boy at position  with girl at position   after swap the arrangement will be gbgb which is a valid arrangement  so answer is       example case   swap boy at position  with girl at position   after swap the arrangement will be bgbgb which is a valid arrangement  so answer is       then type of the last  test cases is   so ci j  j  i example case   swap boy at position  with girl at position   after swap the arrangement will be bgbg which is a valid arrangement  so answer is       example case   arrangement is already valid  no swap is needed  so answer is    author admin tester ★laycurse editorial  codechef comproblemsdevclass tags                                   string greedy                                                              data structures algorithms                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon pike scm qobi st nem  submit