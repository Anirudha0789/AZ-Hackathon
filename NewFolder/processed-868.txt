 problem name  justify lines  problem definition   codecell team is creating their own cheetah text editor and they need a blazing fast algorithm to help them justify lines    justify means that the words and whitespace in a line stretches the whole width of the line    also the team is aiming for flush left and right here that means the starting and ending character of the line will be anything except whitespace  also the text editor uses monospace fonts which basically means all the characters will of equal width    while distributing whitespaces to make the document look prettier one must distribute the extra whitespaces between longer words   and if there are multiple whitespaces around which the sum of words is equal start from the whitespace near the start of sentence  move to next line if words dont fit in the line if only single word in the line align it to the left the maximum width of the line will be always equal to or greater than the longest word  also note that there should be minimum of one whitespace between two words  ref justify  input   first line contains n the number of lines to justify contains the x the number of words in the line and m the width of the line next x lines contain a word each  output   print the justified lines for the given input  constraints     n     x     m    example  input                 i     am     the     one     who     knocks           all     arrays     start     from     one           covfefe  output      i  am  the      one    who      knocks     all   arrays   start     from             one      covfefe  explanation   for the first case the width of the line is  so we go by calculating width when there is only one space which is the minimum required between them i am the one who knocks in this case total width is  so we will shift to newline whenever the counting surpases the width limit in this case  so we obtain  lines in this scenario  i am the width   one who width   knocks width  now while distributing white spaces for each line we rank the spaces between the words using a simple algorithm that is the sum of length of words surrounding it  so in the first line the first space is ranked  sum of words around it is  while the next one is ranked  sum of words around it is  and while distributing we start distributing from rank  and move to other ranks and cycle through them untill the whole width of the line is consumed if same sum lower rank given to the space on the left side  doing this for each line and for the last line as it has only one word left align it and no whitespace later    author â˜…shmabulock editorial  codechef comproblemsjfy tags                                   easymedium list shmabulock sorting strings                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit