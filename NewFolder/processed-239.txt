 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  there are nn cars numbered  through nn on a circular track with length nn  for each ii ≤i≤n≤i≤n the iith of them is at a distance i−i− clockwise from car  i e  car  needs to travel a distance i−i− clockwise to reach car ii  for each valid ii you can fill the iith cars tank with up to fifi litres of gasoline with cost cici coins per litre  after that you choose some car sit in this car and start driving in the clockwise direction  to move one unit of distance in this direction you need to spend  litre of gasoline  when you pass another car even if youd run out of gasoline exactly at that point you steal all its gasoline  you cannot move if you do not have any gasoline left  your goal is to fill the cars in such a way that you are able to choose an optimal car travel the clockwise distance nn and return to the place where you were initially  under this constraint you want to pay the least possible number of coins  find the smallest number of coins you need to pay  it is guaranteed that there is a way to travel the distance nn  it can be proved that in such a case the smallest number of coins is always an integer  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains a single integer nn  the second line contains nn spaceseparated integers ff…fnff…fn  the third line contains nn spaceseparated integers cc…cncc…cn   output for each test case print a single line containing one integer ― the smallest possible number of coins you need to pay  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤fi≤≤fi≤ for each valid ii ≤ci≤≤ci≤ for each valid ii  subtasks subtask   points n≤n≤ subtask   points original constraints                          sample input                                                                           sample output                                author ildaradm editorial  codechef comproblemsgasoline tags                                   sorting                                                              algorithms                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit