 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  you are given a rooted tree with nn nodes numbered  through nn node  is the root  for each ii ≤i≤n−≤i≤n− the parent of the node ii is pipi  you need to answer qq queries  sounds quite familiar for each query first ww tasks are given to node vv  these tasks are processed in the tree in the following way  when a node receives aa tasks and it has no children all aa tasks are executed by this node  otherwise i e  if the node has kk children where kk is a divisor of aa then this node gives akak of these tasks to each of its children  this process is performed recursively by each child on the tasks it receives  otherwise i e  if the node has kk children but kk is not a divisor of aa all aa tasks are ignored and none of this nodes children receive any tasks   for each query find the number of tasks that are not executed i e  end up ignored possibly after passing down the tree  input  the first line of the input contains a single integer nn  the second line contains n−n− spaceseparated integers pp…pn−pp…pn−  the third line contains a single integer qq  qq lines follow  each of these lines contains two spaceseparated integers vv and ww describing a query   output for each query print a single line containing one integer ― the number of tasks that are not executed  constraints  ≤nq≤≤nq≤ ≤pi≤n≤pi≤n for each valid ii the graph described on the input is a tree ≤v≤n≤v≤n ≤w≤≤w≤  subtasks subtask   points n≤n≤ subtask   points original constraints                          sample input                                                               sample output                               author ★dimash editorial  codechef comproblemsatwnt tags                                   trees number theory dfs offline queries                                                              data structures graphs mathematics algorithms graph algos traversals queries                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit