 you are given a string ss of length nn containing lowercase latin letters  you are also given an integer kk  you would like to create a new string s′s′ by following the following process  first partition ss into exactly kk nonempty subsequences ss…skss…sk  note that every character of ss must be present in exactly one of the sisi  then create s′s′ as the concatenation of these subsequences i e s′ss…sks′ss…sk where  denotes string concatenation   determine the lexicographically smallest s′s′ that can be created  input format  the first line of input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains two spaceseparated integers nn and kk  the second line of each test case contains the string ss   output format for each test case output on a new line the lexicographically smallest string s′s′ that can be created  constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤k≤n≤k≤n ss contains only lowercase latin letters  sum of nn over all cases wont exceed ⋅⋅                          sample input                               whizzy   aaacdecdebacde   dbca                          sample output                            whizzy aaaaccdecdebde abcd explanation test case  kk so our only option is to set s′swhizzys′swhizzy  test case  partition saaacdecdebacdesaaacdecdebacde into saaaacsaaaac and scdecdebdescdecdebde to form s′aaaaccdecdebdes′aaaaccdecdebde  test case  partition sdbcasdbca into sasa sbcsbc and sdsd to form s′abcds′abcd  in both test cases  and  it can be shown that no other partition gives a lexicographically smaller s′s′   author ★munch editorial  codechef comproblemsbrkdrms tags                                   easymedium greedy munch start strings                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg sqlq ick nice icon cob scm chicken pike scm qobi st nem  submit