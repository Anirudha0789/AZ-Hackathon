 the kalakeyas were a powerful ferocious and cruel clan of danavas  they were known to be really strong and they did not have any war strategy  they would just attack the enemy randomly and overpower them with sheer number of soldiers  however we all know that baahubali and bhallaladeva defeated the kalakeyas by following the thrishul strategy and successfully defended their kingdom maahishmati  we also know that baahubali was very smart and the truth is that he predicted how the kalakeyas would attack and  devised a counter strategy for the same the night before the war  this is what he found the kalakeyas had n forts numbered  to n and baahubali had n soldiers numbered  to n  baahubali discovered that he can permute his soldiers in any way to get a permutation of  to n  p p     pn  he would then send his soldiers to attack the forts in the following way soldier p attacks fort  soldier p attacks fort      soldier pn attacks fort n  it is easy to note that each soldier attacks exactly one fort and no two soldiers attack the same fort  baahubali also got to know about a secret key of the kalakeyas which is an integer k  a soldier x can destroy a fort y iff absx  y  k  for more details on the abs function check here   your task is to determine whether baahubalis soldiers can be permuted in some way such that all forts can be destroyed  in other words for a permutation p p     pn baahubalis soldiers can destroy all the forts iff abspi  i  k for all   i  n  if this is possible you are also required to output the lexicographically smallest such permutation  if it is not possible output    note a permutation a a     an is said to be lexicographically smaller than a permutation b b     bn if and only if at the first i where ai and bi differ ai comes before bi  you can refer here for a more detailed definition of lexicographic ordering   input the first line of input consists of a single integer t denoting the number of test cases  each of the following t lines contain two space separated integers n and k denoting the values mentioned in the statement above  output for each test case output a single line containing n space separated integers which should be a permutation of   n if baahubalis soldiers can break all the forts  if it is not possible to break all the forts output  quotes for clarity  constraints   ≤ t ≤   ≤ n ≤   ≤ k ≤ n the sum of n over all test cases in a single test file will not exceed   example input         output         explanation for the first test case n   and k    it is impossible to permute   in any way such that absp   and absp    hence output is   for the second test case n   and k    we can just set pi  i and hence the answer is    for the third case the valid permutations are    and     the answer is    since it is lexicographically smaller than      author ★suhash editorial  codechef comproblemsamrc tags                                   greedy constructive observation implementation                                                              algorithms                                                                                        difficulty rating                       na date added  time limit  secs source limit  bytes languages pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl perl scala lua bash js lisp sbcl pas gpc bf cloj d caml fort asm fs wspc lisp clisp scm guile perl erl clps prlg ick nice icon scm chicken pike scm qobi st nem  submit