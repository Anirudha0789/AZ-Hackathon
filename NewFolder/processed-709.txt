 read problem statements in hindi bengali mandarin chinese russian and vietnamese as well  you are given kk permutations of integers  through nn  for each ii ≤i≤k≤i≤k the iith permutation is denoted by aiai…ainaiai…ain  construct a directed acyclic graph with nn nodes numbered  through nn such that  each of the given permutations is a valid topological sort of the graph  formally for each valid kk and each ijij ≤ij≤n≤ij≤n there is no edge from the node akjakj to the node akiaki  the outdegree of each node is at most   the number of nodes with indegree  is the smallest possible   if there are multiple solutions you may find any one  input  the first line of the input contains a single integer tt denoting the number of test cases  the description of tt test cases follows  the first line of each test case contains two spaceseparated integers nn and kk  kk lines follow  for each ii ≤i≤k≤i≤k the iith of these lines contains nn spaceseparated integers aiai…ainaiai…ain   output for each test case print two lines   the first of these lines should contain one integer ― the minimum number of nodes with indegree   the second line should contain nn spaceseparated integers vv…vnvv…vn describing your graph in the following way for each valid ii if vivi there is no outgoing edge from the iith node otherwise there is an edge from the iith node to the vivith node   constraints  ≤t≤≤t≤ ≤n≤≤n≤ ≤k≤≤k≤ ≤aij≤n≤aij≤n for each valid ijij the sum of nn over all test cases does not exceed   subtasks subtask   points  n≤n≤ k≤k≤  subtask   points original constraints                          sample input                                                                  sample output                                  explanation example case  the graph must consist of just two disconnected nodes since no edges are allowed  hence there are two nodes with indegree   example case  the graph may contain an edge from node  to node   then there is only one node with indegree    author ★rahuldugar editorial  codechef comproblemschefdag tags                                   graphs maximum bipartite matching                                                              data structures advanced algorithms advanced graph algos flow networks                                                                                        difficulty rating                        date added  time limit  secs source limit  bytes languages cpp pyth   java c cpp pyth pyp cs ada pypy text pas fpc nodejs ruby php go hask tcl kotlin perl scala lua bash js rust lisp sbcl pas gpc bf cloj r d caml swift fort asm fs wspc lisp clisp sql scm guile perl erl clps prlg ick nice icon cob scm chicken pike scm qobi st nem  submit