
Laxmi Chit Fund is planning to hire interns to derive an algorithm which can apply the law of "Ek ka Double" on any input object. Since this is going to be a complex task and the algorithm is supposed to be derived within 2121 days, they are planning to hire ITUS undergraduates. (ITUS, also known as International Talent of Ultimate Student is an extremely rigorous degree which can only be obtained by very few ultimately talented, extremely competent students.)
Anuradha, the project manager of Laxmi Chit Fund, is a mathematically superstitious woman and believes that any group will be able to make the algorithm only if that group is lucky enough. She has already made MM groups out of the NN students who applied for the internship, and assigned a Project Guides having luck ≥2≥2 for each Group.
She defines the luck of a group as product of lucks of all the students in that group, modulo the luck of Project Guide for that Group. Now, she wants to maximize the luck of each group. She can remove any number of students (possibly 00) from any Group to maximize the luck of that group. Being superstitious, she won't allow the removed students to do internship at Laxmi Chit Fund, also she won't change the group of any student. In other words, any student either works in the already assigned Group, or is not allowed to do internship.
Please help Anuradha to calculate the maximum achievable luck for each Group.
Input

First line contains TT the number of testcases.
First line of each testcase contains two integers NN and MM, the number of students and the number of Groups respectively.
Second line of testcase contains NN space separated integers, ithith of these denotes GiGi, i.e. the Group to which the ithith student belongs. (for 1≤i≤N1≤i≤N)
Third line of the testcase contains NN space separated integers, ithith of these denotes LiLi, i.e. the luck of ithith student. (for 1≤i≤N1≤i≤N)
Fourth line of testcase contains MM space separated integers, ithith of these denotes LGiLGi, i.e. the luck of the Guide of ithith Group. (for 1≤i≤M1≤i≤M)

Output

For each testcase, print a single line containing MM space separated integers, ithith integer MLiMLi should denote the maximum luck of ithith Group.

Constraints

1≤T≤101≤T≤10
1≤N≤1601≤N≤160
⌈N16⌉≤M≤N⌈N16⌉≤M≤N
1≤Gi≤M1≤Gi≤M
0≤Li≤1090≤Li≤109
2≤LGi≤1092≤LGi≤109
Each Group has at least 11 member
Each Group has at most 1616 members

Sample Input
2
5 3
1 2 1 3 3
7 8 2 15 1
14 19 8
2 1
1 1
3 6
6

Sample Output
7 8 7
3

Explanation

Testcase 1:
For Group 11, i.e. {1,3}{1,3}, maximum luck can be achieved by excluding the 3rd3rd student, now the Group becomes {1}{1}, and has luck =7mod14=7=7mod14=7.
For Group 22, i.e. {2}{2}, maximum luck is 88, since 8mod19=88mod19=8.
For Group 33, i.e. {4,5}{4,5}, one possible way to maximize luck is to keep the Group unchanged, i.e. 15∗1mod8=715∗1mod8=7, this is the maximum achievable luck.
Testcase 2: Excluding 2nd2nd student gives maximum luck.


Author(s):

5★mayureshpatle

Editorial:
https://discuss.codechef.com/problems/CMX1P01
Tags:

               
                 amortized-analysis, brute-force, comx2020, easy, mayureshpatle, modular-arith, recursion, subset
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
21-08-2020
Time Limit:
0.5 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit