
As a bounty hunter, you have successfully earned a lot of bounties. While the galaxy was anticipating a clone war, Obi Wan Kenobi found the culprit behind the attempted assassination of Senator Amidala, and that you hired him.
Kenobi spotted you on Coruscant. His agility has kept him on your tail. You need to find a way to get away from him. To get away, you go to your clones and query for your perfect copy. After getting the lead, you successfully dodge Kenobi and go to Geonosis.
Consider the grid of planets. As a bounty hunter, you cannot visit all the planets. You can go left, right, up and down. Kenobi damaged our navigation system, so the only way you can travel is by looking at adjacent planets.
Input Format

First line will contain TT, the number of testcases.
After each query, you must read a line containing two integers denoting the coordinates on the grid where you land. (Except after you output “! stay”) (If you cannot make a certain move, you stay at the same location)

Output Format

To make a query, you should print a line containing the character "?" (without quotes) and a string s(consisting of lowercase Latin alphabets).
To indicate the end of the interaction, output “! stay” (without quotes).
After outputting each line, don't forget to flush the output.

Constraints

1≤T≤51≤T≤5
You can make a maximum of 2500 queries per test case.
Grid size is 20×2020×20
                        Sample Input 1
                        

1
2 1
2 2
2 2

                        Sample Output 1
                        

? right
? up
? up
! stay
Explanation
First you read the number of test cases from the interactor.
Assume that you start from position (1,1)(1,1).
Now you query right and two integers 2 and 1 are returned, denoting that you are now at (2,1)(2,1).
For the third query, when you are at position (2,2)(2,2), you query up and two integers 2 and 2 are returned, which means that the position (2,3)(2,3) is blocked and hence, you do not move.
Finally you output stay to indicate the end of the interaction.
Note: This is just a sample denoting the interaction. The starting point, ending point may differ.

Author(s):

4★rutvij1

Editorial:
https://discuss.codechef.com/problems/FETTPUR
Tags:

               
                 depth-first-search, dfsgrid, interactive, rutvij1
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
22-03-2022
Time Limit:
5 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit