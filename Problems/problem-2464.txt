
Given a tree with NN nodes which are numbered as 11 to NN and N−1N−1 weighted edges.
You can perform 2 types of operation as many times you want:
1: An edge can be broken at a cost of its weight. 
2: A coloured node can be made uncoloured or vice versa at a cost of CiCi, where CiCi is the cost of ithith node .  
A query is defined as xx kk where you have to find mimimum cost of obtaining a connected component of given tree having size equal to xx and consisting of exactly kk coloured nodes by performing as many operations as you want. 
Note:
Each query is independent of each other.
Input Format

The first line contains 2 space separated integers NN QQ, denoting the number of nodes and number of queries respectively.
Then N−1N−1 line follows, each having 3 space separated integers UU VV WW, denoting an edge between UU and VV of cost WW.
Next line contains n space separated integers A1A1 A2A2…AnAn, where AiAi can be 00 (uncoloured) or 11 (coloured).
Next line contains n space separated integers C1C1 C2C2….CnCn, where CiCi denotes the cost of altering  the color of ithith node.
Then QQ line follows, each having 2 space separated integers xx kk, denoting the size of required connected component and required number of coloured nodes respectively.

Output Format

For each query, You have to print a single line containing an integer, i.e, minimum cost required to obtain any connected component of size xx having exactly kk coloured nodes by performing any number of operations.

It is given that answer always exists under given constraints. 
Constraints

1≤N,Q≤1031≤N,Q≤103
0≤Ai≤10≤Ai≤1
1≤Ci≤1061≤Ci≤106
1≤W≤1061≤W≤106
1≤U,V≤N1≤U,V≤N
1≤x≤N1≤x≤N
0≤k≤min(10,x)0≤k≤min(10,x)
                        Sample Input 1
                        

10 1
8 9 8
8 2 7
8 3 8
9 1 1
3 10 4
9 7 7
8 6 5
1 5 9
6 4 10
1 0 1 1 0 0 1 1 1 0
1 10 2 3 20 1 1 0 1 9
6 1

                        Sample Output 1
                        

 8
Explanation
break edge -> (1 - 9) and (8 - 6) 
and uncoloured node number 7 , 8 , 9
which gives total cost = 5 + 1 + 1 + 1 + 0 = 8

Author(s):

6★dragno99

Editorial:
https://discuss.codechef.com/problems/CAC2022
Tags:

               
                 depth-first-search, dp-on-trees, dragno99, trees
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
17-03-2022
Time Limit:
1 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit